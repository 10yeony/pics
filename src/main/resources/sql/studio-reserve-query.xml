<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- 예약 Flow 정리 
		1. Select
		1-1. 해당 스튜디오의 예약 관련 정보 불러오기 
			- 예약 가능 일자 : 캘린더 표시, 가능 시간 (-,로 split) : 불가능은 클릭 막든지... 
			- 인원수 : 최소 인원수부터 최대 인원수까지 +/-로 제시+ 추가 인원 수  		
		1-2. 총 금액
			- 초과 인원 : excharge*초과 인원수 계산
			- 폼 조건 입력 할 때마다 총 금액에는 keyup 이벤트로 계산 결과 제시
		★ 예약부터는 로긴 필요 >> 사용자 정보 및 스튜디오 정보는 session에 넣고 활용하는 방법도 있음
		2. insert
		2-1. 입력한 조건으로 예약한 내역 있는지 조회 >>> 있으면 이미 예약된 내역 있다고 알림 & 마이페이지 가기
			- 예약자 id, 스튜디오 id, 날짜, 시간 비교
		2-2. 예약 버튼 누르면 스튜디오 정보, 예약 정보, 고객 정보 가지고 서버로, 이후 작업
			★ service에서 꼭꼭꼭 transaction처리!!!!
			- Reservation 테이블에 예약 row 1개 추가 (ok)
			- 고객 마이페이지에서도 Reservation 테이블에서 cust_id와 일치하는 모든 예약정보 불러오기 
			- 업체 측 일정도 불가능으로 변경(Exception Date에 해당 일자 추가)	
		3. update : 1-1 ~ 2-2 과정과 동일. 다만 update 적용
		4. delete : 2-2에서 reserve id 지우기
	-->

<mapper namespace="StudioReserveMapper">

 	<resultMap type="reservation" id="reservationRM">
		<result property="resId" column="res_id"/>
		<result property="stuId" column="stu_id"/>
		<result property="custId" column="cust_id"/>
		<result property="startDate" column="start_date"/>
		<result property="endDate" column="end_date"/>
		<result property="totalPrice" column="total_price"/>
		<result property="resDate" column="res_date"/>
		<result property="totalPeople" column="total_people"/>
	</resultMap>
	
	<resultMap type="reservation" id="resv-stuRM">
		<result property="resId" column="res_id"/>
		<result property="stuId" column="stu_id"/>
		<result property="custId" column="cust_id"/>
		<result property="startDate" column="start_date"/>
		<result property="endDate" column="end_date"/>
		<result property="totalPrice" column="total_price"/>
		<result property="resDate" column="res_date"/>
		<result property="totalPeople" column="total_people"/>
		
		<association property="studio" javaType="studio">
			<result property="comId" column="com_id"/>
			<result property="categoryId" column="category_id"/>
			<result property="name" column="name"/>
			<result property="description" column="description"/>
			<result property="rule" column="rule"/>
			<result property="mainImg" column="main_img"/>
			<result property="portImg" column="port_img"/>
			<result property="cadImg" column="cad_img"/>
			<result property="floor" column="floor"/>
			
		</association>
	</resultMap>

	
	<!-- ================== 1. 예약 관련 정보 불러오기 ================== -->	
  	<select id="getExceptionDate" parameterType="int" resultType="exceptionDate">							
		SELECT exception_id, start_date,end_date 
		FROM exception_date
		WHERE stu_id=${value}
	</select>

	<select id="getRepeatDate" parameterType="int" resultType="repeatDate">							
		SELECT rep.repeat_id,rep.weekday weekDate, rep.time
		FROM repeat_date rep
		WHERE rep.stu_id=${value}
	</select>

	<select id="getReservation" parameterType="reservation" resultType="reservation">							
		SELECT res_id,stu_id,cust_id,start_date,end_date,total_price,res_date,total_people
		FROM reservation
		<where>
 			<choose>
			<!-- 필수적인 예약 요소들이 다 있는지 >> 동일한 예약 있는지 조회-->
			<when  test="customer!=null and stuId!=null and startDate!=null and endDate!=null">
				cust_id=#{customer.custId} AND stu_id=#{stuId} AND start_date=#{startDate} AND end_date=#{endDate}
			</when>
			<!-- 특정 고객이 특정 스튜디오 예약한 적 있는지 확인 >> 고객 찜 리스트 -->
			<when  test="customer!=null and stuId!=null">
				cust_id=#{customer.custId} AND stu_id=#{stuId}
			</when>
			<!-- 특정 고객의 모든 스튜디오 확인 >> 마이페이지 예약 내역 -->
			<when  test="custId!=null">
				cust_id=#{custId}
			</when>
			<!-- 특정 스튜디오의 모든 예약내역 확인 -->
			<when test="stuId!=null">
				stu_id=#{stuId}
			</when>			
			<!-- 조건이 없다면 모든 예약 내역 가져오기 -->
			<otherwise>				
 			</otherwise>
			</choose>
		</where> 
	</select>
	
	<!-- ================== 2. 예약하기 ================== -->
	<insert id="addReservation" parameterType="reservation">							
		INSERT into reservation(cust_id,stu_id,start_date,end_date,total_price,res_date,total_people)
		VALUES(#{custId},#{stuId},#{startDate},#{endDate},#{totalPrice},now(),#{totalPeople})
	</insert> 
	
 	<insert id="addExceptionDates" parameterType="reservation">							
		INSERT into exception_date(start_date,end_date,stu_id)
		VALUES (#{startDate},#{endDate},#{stuId})
	</insert>

	<update id="updateReservation" parameterType="reservation">							
		UPDATE reservation 
		SET 
		start_date=#{startDate},
		end_date=#{endDate},
		total_price=#{totalPrice},
		res_date=now(),
		total_people=#{totalPeople}
		WHERE res_id=#{resId}
	</update>

 	<update id="updateExceptionDate" parameterType="reservation">							
		UPDATE exception_date 
		SET 
		start_date=#{startDate},
		end_date=#{endDate}
		WHERE stu_id=#{stuId}
	</update>

	<delete id="deleteReservations" parameterType="list">							
		Delete FROM reservation
		WHERE res_id in
 		<foreach collection="list" item="reservation" open="(" close=")" separator=",">
		#{reservation.resId}
		</foreach>
	</delete>

 	<delete id="deleteExceptionDates" parameterType="list">							
		Delete FROM exception_date
		WHERE stu_id in
		<foreach collection="list" item="reservation" open="(" close=")" separator=",">
		#{reservation.stuId}
		</foreach>
		AND start_date in
		<foreach collection="list" item="reservation" open="(" close=")" separator=",">
		date(#{reservation.startDate})
		</foreach>
		AND end_date in
		<foreach collection="list" item="reservation" open="(" close=")" separator=",">
		date(#{reservation.endDate})
		</foreach> 
	</delete>
	
	
	<!-- reservation for customer
		 1. 오늘 이전 날짜 예약
		 2. 오늘 이후 날짜 예약 -->
		 
	<select id="getExpiredReservation" parameterType="int" resultMap="resv-stuRM">
		SELECT r.res_id,r.stu_id,r.cust_id,r.start_date,r.end_date,r.total_price,r.res_date,r.total_people
				,s.name, s.description,s.rule,s.main_img,s.port_img,s.cad_img,s.floor
		FROM reservation r,studio s
		where cust_id = #{value}
		and start_date &lt; now()
		and s.stu_id =r.stu_id;
	 </select>
	 
	 <select id="getWillReservation" parameterType="int" resultMap="resv-stuRM">
	 	SELECT r.res_id,r.stu_id,r.cust_id,r.start_date,r.end_date,r.total_price,r.res_date,r.total_people
				,s.name, s.description,s.rule,s.main_img,s.port_img,s.cad_img,s.floor
		FROM reservation r,studio s
		where cust_id = #{value}
		and start_date &gt;= now()
		and s.stu_id =r.stu_id;
	 </select>
 </mapper> 
