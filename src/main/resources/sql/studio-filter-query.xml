<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="StudioFilterMapper">

	<!-- ================== 스튜디오 공간 등록 관련 쿼리 ======================= -->
	<insert id="registerStudioFilter" parameterType="studioFilter">
		INSERT INTO
		studio_filter(stu_id, size, options, parking, unit_price, default_capacity, excharge, address, max_capacity)
		VALUES (#{stdId}, #{size}, #{options}, #{parking}, #{unitPrice}, #{defaultCapacity}, #{excharge}, #{address}, #{maxCapacity})
	</insert>

	<select id="getStudioFilterId"></select>
	
	<!-- ============================제영스 공간 ======================================-->
	<!-- 필터 검색 결과를 위한 RM (Tag 제외) -->
	<resultMap type="studio" id="studioRM">
		<id column="stu_id" property="stuId"/>
		<result column="name" property="name" />
		<result column="description" property="description" />
		<result column="main_img" property="mainImg" />
		<result column="avg" property="avgScore" />
		<association property="category" javaType="category">
			<result column="category_name" property="categoryName" />
		</association>
		<association property="studioFilter"
			javaType="studioFilter">
			<result column="unit_price" property="unitPrice" />
		</association>
		<!-- <association property="schedule" javaType="schedule">
			<collection property="repeatDate" javaType="java.util.ArrayList" ofType="repeatDate">
				<result column="weekday" property="weekDate"/>
				<result column="time" property="time"/>
			</collection>
		</association> -->
		
	</resultMap>

	<!-- 필터 검색 결과를 위한 쿼리 모듈 -->
	<!-- 필요없는 컬럼 지우기 :: 프론트 검사 이후 -->
	<sql id="Select-J-Studio-Category-filter-tag-review">
		SELECT
		s.stu_id, s.name, s.description, s.main_img,
		c.category_id, c.category_name,
		com.name com_name,
		r.weekday,
		e.start_date, e.end_date,
		t.tag_name,
		f.unit_price, f.address,
		ifnull(rv.avg,0) avg,
		ifnull(res.count,0) count
		FROM studio s
		JOIN company com
		ON s.com_id = com.com_id
		JOIN studio_filter f
		ON s.stu_id = f.stu_id
		LEFT JOIN studio_category c
		ON s.category_id = c.category_id
		LEFT OUTER JOIN repeat_date r
		ON s.stu_id = r.stu_id
		LEFT OUTER JOIN exception_date e
		ON s.stu_id = e.stu_id
		LEFT OUTER JOIN tag t
		ON s.stu_id = t.stu_id
		LEFT OUTER JOIN
		(SELECT
		stu_id, AVG(score) avg
		FROM review
		GROUP BY stu_id
		) rv
		ON s.stu_id = rv.stu_id
		LEFT OUTER JOIN
		(SELECT
		stu_id, COUNT(stu_id) count
		FROM reservation
		GROUP BY stu_id
		) res
		ON s.stu_id = res.stu_id
	</sql>

	<!-- 필터 검색 쿼리 -->
	<select id="selectStudioByFilter" parameterType="HashMap" resultMap="studioRM">
		<include refid="Select-J-Studio-Category-filter-tag-review" />
		<where>
		<choose>
			<!-- tag 검색 :: tag 검색 시 필터 조건 걸리지 않음 -->
			<when test="searchTag != null">
				AND t.tag_name = #{searchTag}
			</when>
			<otherwise>
			<!-- 카테고리/필터 조건 -->
			<if test="categoryId != null">
				AND c.category_id = #{categoryId}
			</if>
			<if test="weekDate != null">
				AND r.weekday = #{weekDate}
			</if>
			<if test="selectedDate != null">
				AND (e.start_date > #{selectedDate}
				OR #{selectedDate} > e.end_date)
			</if>
			<if test="address != null">
				AND f.address Like "%${address}%"
			</if>
			<if test="maxSize != null and minSize != null">
				AND (f.size >= #{minSize}
				AND #{maxSize} >= f.size)
			</if>
			<if test="minUnitPrice != null and maxUnitPrice">
				AND (f.unit_price >= #{minUnitPrice}
				AND #{maxUnitPrice} >= f.unit_price)
			</if>
			<if test="capacity != null">
				AND f.max_capacity >= #{capacity}
			</if>
			<if test="searchContent != null">
			<!-- 검색어 : 회사이름, 스튜디오 이름, 상세설명, 태그, 주소-->
				AND 
				<foreach collection="searchContent" item="search" open="(" close =")" separator="OR">
					s.name Like '%${search}%'
					OR c.category_name Like '%${search}%'
					OR s.description Like '%${search}%'
					OR t.tag_name Like '%${search}%'
					OR f.address Like '%${search}%'
					OR com.name Like '%${search}%'
				</foreach>
			</if>
			</otherwise>	
		</choose>
		</where>
		<!-- 정렬  0최신순: 1:인기오름차순, 2: 인기내림차순, 3: 가격오름차순, 4: 가격내림차순 -->
		<if test="orderCon == 0">
			ORDER BY s.stu_id DESC;
		</if>
		<if test="orderCon == 1">
			ORDER BY res.count ASC;
		</if>
		<if test="orderCon == 2">
			ORDER BY res.count DESC;
		</if>
		<if test="orderCon == 3">
			ORDER BY f.unit_price ASC;
		</if>
		<if test="orderCon == 4">
			ORDER BY f.unit_price DESC;
		</if>
	</select>
	
	<select id="test" parameterType="searchCon" resultType="studio">
		SELECT stu_id
		FROM studio
		<where>
		<if test="searchContent != null">
			
				name Like '%${search}%'
			
		</if>
		</where>
	</select>
</mapper>